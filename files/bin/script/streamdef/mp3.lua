-- mp3解析
-- ストリーム解析
-- 途中、、

local syncword = 0xfff
local stereo = 0 -- '00'
local joint_stereo = 1 --  '01'  (intensity_stereo and/or ms_stereo)
local dual_channel = 2 --  '10' 
local single_channel = 3 --  '11'
local previous_syncword
local bitrate_table = {
    [0] = false,
	[1] = 32  * 1000,
	[2] = 40  * 1000,
	[3] = 48  * 1000,
	[4] = 56  * 1000,
	[5] = 64  * 1000,
	[6] = 80  * 1000,
	[7] = 96  * 1000,
	[8] = 112 * 1000,
	[9] = 128 * 1000,
	[10] = 160 * 1000,
	[11] = 192 * 1000,
	[12] = 224 * 1000,
	[13] = 256 * 1000,
	[14] = 320 * 1000}
local sampling_freq_table = {
	[0] = 44100,
	[1] = 48000,
	[2] = 32000
}
local scale_factor_band_index = {
	-- 44100
	[0] = {
		{0, 4, 8, 12, 16, 20, 24, 30, 36, 42, 50, 60, 72, 88, 106, 128, 156, 190, 230, 276, 330, 384, 576}, 
		{0, 4, 8, 12, 16, 22, 28, 38, 50, 64, 80, 100, 126, 192}
	},
	-- 48000
	[1] = {
		{0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 54, 66, 82, 102, 126, 156, 194, 240, 296, 364, 448, 550, 576}, 
		{0, 4, 8, 12, 16, 22, 30, 42, 58, 78, 104, 138, 180, 192}
	},
	-- 32000
	[2] = {
		{0, 4, 8, 12, 16, 20, 24, 30, 36, 44, 52, 62, 74, 90, 110, 134, 162, 196, 238, 288, 342, 418, 576}, 
		{0, 4, 8, 12, 16, 22, 30, 40, 52, 66, 84, 106, 136, 192}
	},
}
local huff_table = {
	[0] = {
		lin=0,
		_                       = {0, 0}},
	[1] = {
		lin=0,
		_1                      = {0, 0},
		_001                    = {0, 1},
		_01                     = {1, 0},
		_000                    = {1, 1}},
	[2] = {
		lin=0,
		_1                      = {0, 0},
		_010                    = {0, 1},
		_000001                 = {0, 2},
		_011                    = {1, 0},
		_001                    = {1, 1},
		_00001                  = {1, 2},
		_00011                  = {2, 0},
		_00010                  = {2, 1},
		_000000                 = {2, 2}},
	[3] = {
		lin=0,
		_11                     = {0, 0},
		_10                     = {0, 1},
		_000001                 = {0, 2},
		_001                    = {1, 0},
		_01                     = {1, 1},
		_00001                  = {1, 2},
		_00011                  = {2, 0},
		_00010                  = {2, 1},
		_000000                 = {2, 2}},
	[4] = {},
	[5] = {
		lin=0,
		_1                      = {0, 0},
		_010                    = {0, 1},
		_000110                 = {0, 2},
		_0000101                = {0, 3},
		_011                    = {1, 0},
		_001                    = {1, 1},
		_000100                 = {1, 2},
		_0000100                = {1, 3},
		_000111                 = {2, 0},
		_000101                 = {2, 1},
		_0000111                = {2, 2},
		_00000001               = {2, 3},
		_0000110                = {3, 0},
		_000001                 = {3, 1},
		_0000001                = {3, 2},
		_00000000               = {3, 3}},
	[6] = {
		lin=0,
		_111                    = {0, 0},
		_011                    = {0, 1},
		_00101                  = {0, 2},
		_0000001                = {0, 3},
		_110                    = {1, 0},
		_10                     = {1, 1},
		_0011                   = {1, 2},
		_00010                  = {1, 3},
		_0101                   = {2, 0},
		_0100                   = {2, 1},
		_00100                  = {2, 2},
		_000001                 = {2, 3},
		_000011                 = {3, 0},
		_00011                  = {3, 1},
		_000010                 = {3, 2},
		_0000000                = {3, 3}},
	[7] = {
		lin=0,
		_1                      = {0, 0},
		_010                    = {0, 1},
		_001010                 = {0, 2},
		_00010011               = {0, 3},
		_00010000               = {0, 4},
		_000001010              = {0, 5},
		_011                    = {1, 0},
		_0011                   = {1, 1},
		_000111                 = {1, 2},
		_0001010                = {1, 3},
		_0000101                = {1, 4},
		_00000011               = {1, 5},
		_001011                 = {2, 0},
		_00100                  = {2, 1},
		_0001101                = {2, 2},
		_00010001               = {2, 3},
		_00001000               = {2, 4},
		_000000100              = {2, 5},
		_0001100                = {3, 0},
		_0001011                = {3, 1},
		_00010010               = {3, 2},
		_000001111              = {3, 3},
		_000001011              = {3, 4},
		_000000010              = {3, 5},
		_0000111                = {4, 0},
		_0000110                = {4, 1},
		_00001001               = {4, 2},
		_000001110              = {4, 3},
		_000000011              = {4, 4},
		_0000000001             = {4, 5},
		_00000110               = {5, 0},
		_00000100               = {5, 1},
		_000000101              = {5, 2},
		_0000000011             = {5, 3},
		_0000000010             = {5, 4},
		_0000000000             = {5, 5}},
	[8] = {
		lin=0,
		_11                     = {0, 0},
		_100                    = {0, 1},
		_000110                 = {0, 2},
		_00010010               = {0, 3},
		_00001100               = {0, 4},
		_000000101              = {0, 5},
		_101                    = {1, 0},
		_01                     = {1, 1},
		_0010                   = {1, 2},
		_00010000               = {1, 3},
		_00001001               = {1, 4},
		_00000011               = {1, 5},
		_000111                 = {2, 0},
		_0011                   = {2, 1},
		_000101                 = {2, 2},
		_00001110               = {2, 3},
		_00000111               = {2, 4},
		_000000011              = {2, 5},
		_00010011               = {3, 0},
		_00010001               = {3, 1},
		_00001111               = {3, 2},
		_000001101              = {3, 3},
		_000001010              = {3, 4},
		_0000000100             = {3, 5},
		_00001101               = {4, 0},
		_0000101                = {4, 1},
		_00001000               = {4, 2},
		_000001011              = {4, 3},
		_0000000101             = {4, 4},
		_0000000001             = {4, 5},
		_000001100              = {5, 0},
		_00000100               = {5, 1},
		_000000100              = {5, 2},
		_000000001              = {5, 3},
		_00000000001            = {5, 4},
		_00000000000            = {5, 5}},
	[9] = {
		lin=0,
		_111                    = {0, 0},
		_101                    = {0, 1},
		_01001                  = {0, 2},
		_001110                 = {0, 3},
		_00001111               = {0, 4},
		_000000111              = {0, 5},
		_110                    = {1, 0},
		_100                    = {1, 1},
		_0101                   = {1, 2},
		_00101                  = {1, 3},
		_000110                 = {1, 4},
		_00000111               = {1, 5},
		_0111                   = {2, 0},
		_0110                   = {2, 1},
		_01000                  = {2, 2},
		_001000                 = {2, 3},
		_0001000                = {2, 4},
		_00000101               = {2, 5},
		_001111                 = {3, 0},
		_00110                  = {3, 1},
		_001001                 = {3, 2},
		_0001010                = {3, 3},
		_0000101                = {3, 4},
		_00000001               = {3, 5},
		_0001011                = {4, 0},
		_000111                 = {4, 1},
		_0001001                = {4, 2},
		_0000110                = {4, 3},
		_00000100               = {4, 4},
		_000000001              = {4, 5},
		_00001110               = {5, 0},
		_0000100                = {5, 1},
		_00000110               = {5, 2},
		_00000010               = {5, 3},
		_000000110              = {5, 4},
		_000000000              = {5, 5}},
	[10] = {
		lin=0,
		_1                      = {0, 0},
		_010                    = {0, 1},
		_001010                 = {0, 2},
		_00010111               = {0, 3},
		_000100011              = {0, 4},
		_000011110              = {0, 5},
		_000001100              = {0, 6},
		_0000010001             = {0, 7},
		_011                    = {1, 0},
		_0011                   = {1, 1},
		_001000                 = {1, 2},
		_0001100                = {1, 3},
		_00010010               = {1, 4},
		_000010101              = {1, 5},
		_00001100               = {1, 6},
		_00000111               = {1, 7},
		_001011                 = {2, 0},
		_001001                 = {2, 1},
		_0001111                = {2, 2},
		_00010101               = {2, 3},
		_000100000              = {2, 4},
		_0000101000             = {2, 5},
		_000010011              = {2, 6},
		_000000110              = {2, 7},
		_0001110                = {3, 0},
		_0001101                = {3, 1},
		_00010110               = {3, 2},
		_000100010              = {3, 3},
		_0000101110             = {3, 4},
		_0000010111             = {3, 5},
		_000010010              = {3, 6},
		_0000000111             = {3, 7},
		_00010100               = {4, 0},
		_00010011               = {4, 1},
		_000100001              = {4, 2},
		_0000101111             = {4, 3},
		_0000011011             = {4, 4},
		_0000010110             = {4, 5},
		_0000001001             = {4, 6},
		_0000000011             = {4, 7},
		_000011111              = {5, 0},
		_000010110              = {5, 1},
		_0000101001             = {5, 2},
		_0000011010             = {5, 3},
		_00000010101            = {5, 4},
		_00000010100            = {5, 5},
		_0000000101             = {5, 6},
		_00000000011            = {5, 7},
		_00001110               = {6, 0},
		_00001101               = {6, 1},
		_000001010              = {6, 2},
		_0000001011             = {6, 3},
		_0000010000             = {6, 4},
		_0000000110             = {6, 5},
		_00000000101            = {6, 6},
		_00000000001            = {6, 7},
		_000001001              = {7, 0},
		_00001000               = {7, 1},
		_000000111              = {7, 2},
		_0000001000             = {7, 3},
		_0000000100             = {7, 4},
		_00000000100            = {7, 5},
		_00000000010            = {7, 6},
		_00000000000            = {7, 7}},
	[11] = {
		lin=0,
		_11                     = {0, 0},
		_100                    = {0, 1},
		_01010                  = {0, 2},
		_0011000                = {0, 3},
		_00100010               = {0, 4},
		_000100001              = {0, 5},
		_00010101               = {0, 6},
		_000001111              = {0, 7},
		_101                    = {1, 0},
		_011                    = {1, 1},
		_0100                   = {1, 2},
		_001010                 = {1, 3},
		_00100000               = {1, 4},
		_00010001               = {1, 5},
		_0001011                = {1, 6},
		_00001010               = {1, 7},
		_01011                  = {2, 0},
		_00111                  = {2, 1},
		_001101                 = {2, 2},
		_0010010                = {2, 3},
		_00011110               = {2, 4},
		_000011111              = {2, 5},
		_00010100               = {2, 6},
		_00000101               = {2, 7},
		_0011001                = {3, 0},
		_001011                 = {3, 1},
		_0010011                = {3, 2},
		_000111011              = {3, 3},
		_00011011               = {3, 4},
		_0000010010             = {3, 5},
		_00001100               = {3, 6},
		_000000101              = {3, 7},
		_00100011               = {4, 0},
		_00100001               = {4, 1},
		_00011111               = {4, 2},
		_000111010              = {4, 3},
		_000011110              = {4, 4},
		_0000010000             = {4, 5},
		_000000111              = {4, 6},
		_0000000101             = {4, 7},
		_00011100               = {5, 0},
		_00011010               = {5, 1},
		_000100000              = {5, 2},
		_0000010011             = {5, 3},
		_0000010001             = {5, 4},
		_00000001111            = {5, 5},
		_0000001000             = {5, 6},
		_00000001110            = {5, 7},
		_00001110               = {6, 0},
		_0001100                = {6, 1},
		_0001001                = {6, 2},
		_00001101               = {6, 3},
		_000001110              = {6, 4},
		_0000001001             = {6, 5},
		_0000000100             = {6, 6},
		_0000000001             = {6, 7},
		_00001011               = {7, 0},
		_0000100                = {7, 1},
		_00000110               = {7, 2},
		_000000110              = {7, 3},
		_0000000110             = {7, 4},
		_0000000011             = {7, 5},
		_0000000010             = {7, 6},
		_0000000000             = {7, 7}},
	[12] = {
		lin=0,
		_1001                   = {0, 0},
		_110                    = {0, 1},
		_10000                  = {0, 2},
		_0100001                = {0, 3},
		_00101001               = {0, 4},
		_000100111              = {0, 5},
		_000100110              = {0, 6},
		_000011010              = {0, 7},
		_111                    = {1, 0},
		_101                    = {1, 1},
		_0110                   = {1, 2},
		_01001                  = {1, 3},
		_0010111                = {1, 4},
		_0010000                = {1, 5},
		_00011010               = {1, 6},
		_00001011               = {1, 7},
		_10001                  = {2, 0},
		_0111                   = {2, 1},
		_01011                  = {2, 2},
		_001110                 = {2, 3},
		_0010101                = {2, 4},
		_00011110               = {2, 5},
		_0001010                = {2, 6},
		_00000111               = {2, 7},
		_010001                 = {3, 0},
		_01010                  = {3, 1},
		_001111                 = {3, 2},
		_001100                 = {3, 3},
		_0010010                = {3, 4},
		_00011100               = {3, 5},
		_00001110               = {3, 6},
		_00000101               = {3, 7},
		_0100000                = {4, 0},
		_001101                 = {4, 1},
		_0010110                = {4, 2},
		_0010011                = {4, 3},
		_00010010               = {4, 4},
		_00010000               = {4, 5},
		_00001001               = {4, 6},
		_000000101              = {4, 7},
		_00101000               = {5, 0},
		_0010001                = {5, 1},
		_00011111               = {5, 2},
		_00011101               = {5, 3},
		_00010001               = {5, 4},
		_000001101              = {5, 5},
		_00000100               = {5, 6},
		_000000010              = {5, 7},
		_00011011               = {6, 0},
		_0001100                = {6, 1},
		_0001011                = {6, 2},
		_00001111               = {6, 3},
		_00001010               = {6, 4},
		_000000111              = {6, 5},
		_000000100              = {6, 6},
		_0000000001             = {6, 7},
		_000011011              = {7, 0},
		_00001100               = {7, 1},
		_00001000               = {7, 2},
		_000001100              = {7, 3},
		_000000110              = {7, 4},
		_000000011              = {7, 5},
		_000000001              = {7, 6},
		_0000000000             = {7, 7}},
	[13] = {
		lin=0,
		_1                      = {0, 0},
		_0101                   = {0, 1},
		_001110                 = {0, 2},
		_0010101                = {0, 3},
		_00100010               = {0, 4},
		_000110011              = {0, 5},
		_000101110              = {0, 6},
		_0001000111             = {0, 7},
		_000101010              = {0, 8},
		_0000110100             = {0, 9},
		_00001000100            = {0, 10},
		_00000110100            = {0, 11},
		_000001000011           = {0, 12},
		_000000101100           = {0, 13},
		_0000000101011          = {0, 14},
		_0000000010011          = {0, 15},
		_011                    = {1, 0},
		_0100                   = {1, 1},
		_001100                 = {1, 2},
		_0010011                = {1, 3},
		_00011111               = {1, 4},
		_00011010               = {1, 5},
		_000101100              = {1, 6},
		_000100001              = {1, 7},
		_000011111              = {1, 8},
		_000011000              = {1, 9},
		_0000100000             = {1, 10},
		_0000011000             = {1, 11},
		_00000011111            = {1, 12},
		_000000100011           = {1, 13},
		_000000010110           = {1, 14},
		_000000001110           = {1, 15},
		_001111                 = {2, 0},
		_001101                 = {2, 1},
		_0010111                = {2, 2},
		_00100100               = {2, 3},
		_000111011              = {2, 4},
		_000110001              = {2, 5},
		_0001001101             = {2, 6},
		_0001000001             = {2, 7},
		_000011101              = {2, 8},
		_0000101000             = {2, 9},
		_0000011110             = {2, 10},
		_00000101000            = {2, 11},
		_00000011011            = {2, 12},
		_000000100001           = {2, 13},
		_0000000101010          = {2, 14},
		_0000000010000          = {2, 15},
		_0010110                = {3, 0},
		_0010100                = {3, 1},
		_00100101               = {3, 2},
		_000111101              = {3, 3},
		_000111000              = {3, 4},
		_0001001111             = {3, 5},
		_0001001001             = {3, 6},
		_0001000000             = {3, 7},
		_0000101011             = {3, 8},
		_00001001100            = {3, 9},
		_00000111000            = {3, 10},
		_00000100101            = {3, 11},
		_00000011010            = {3, 12},
		_000000011111           = {3, 13},
		_0000000011001          = {3, 14},
		_0000000001110          = {3, 15},
		_00100011               = {4, 0},
		_0010000                = {4, 1},
		_000111100              = {4, 2},
		_000111001              = {4, 3},
		_0001100001             = {4, 4},
		_0001001011             = {4, 5},
		_00001110010            = {4, 6},
		_00001011011            = {4, 7},
		_0000110110             = {4, 8},
		_00001001001            = {4, 9},
		_00000110111            = {4, 10},
		_000000101001           = {4, 11},
		_000000110000           = {4, 12},
		_0000000110101          = {4, 13},
		_0000000010111          = {4, 14},
		_00000000011000         = {4, 15},
		_000111010              = {5, 0},
		_00011011               = {5, 1},
		_000110010              = {5, 2},
		_0001100000             = {5, 3},
		_0001001100             = {5, 4},
		_0001000110             = {5, 5},
		_00001011101            = {5, 6},
		_00001010100            = {5, 7},
		_00001001101            = {5, 8},
		_00000111010            = {5, 9},
		_000001001111           = {5, 10},
		_00000011101            = {5, 11},
		_0000001001010          = {5, 12},
		_0000000110001          = {5, 13},
		_00000000101001         = {5, 14},
		_00000000010001         = {5, 15},
		_000101111              = {6, 0},
		_000101101              = {6, 1},
		_0001001110             = {6, 2},
		_0001001010             = {6, 3},
		_00001110011            = {6, 4},
		_00001011110            = {6, 5},
		_00001011010            = {6, 6},
		_00001001111            = {6, 7},
		_00001000101            = {6, 8},
		_000001010011           = {6, 9},
		_000001000111           = {6, 10},
		_000000110010           = {6, 11},
		_0000000111011          = {6, 12},
		_0000000100110          = {6, 13},
		_00000000100100         = {6, 14},
		_00000000001111         = {6, 15},
		_0001001000             = {7, 0},
		_000100010              = {7, 1},
		_0000111000             = {7, 2},
		_00001011111            = {7, 3},
		_00001011100            = {7, 4},
		_00001010101            = {7, 5},
		_000001011011           = {7, 6},
		_000001011010           = {7, 7},
		_000001010110           = {7, 8},
		_000001001001           = {7, 9},
		_0000001001101          = {7, 10},
		_0000001000001          = {7, 11},
		_0000000110011          = {7, 12},
		_00000000101100         = {7, 13},
		_0000000000101011       = {7, 14},
		_0000000000101010       = {7, 15},
		_000101011              = {8, 0},
		_00010100               = {8, 1},
		_000011110              = {8, 2},
		_0000101100             = {8, 3},
		_0000110111             = {8, 4},
		_00001001110            = {8, 5},
		_00001001000            = {8, 6},
		_000001010111           = {8, 7},
		_000001001110           = {8, 8},
		_000000111101           = {8, 9},
		_000000101110           = {8, 10},
		_0000000110110          = {8, 11},
		_0000000100101          = {8, 12},
		_00000000011110         = {8, 13},
		_000000000010100        = {8, 14},
		_000000000010000        = {8, 15},
		_0000110101             = {9, 0},
		_000011001              = {9, 1},
		_0000101001             = {9, 2},
		_0000100101             = {9, 3},
		_00000101100            = {9, 4},
		_00000111011            = {9, 5},
		_00000110110            = {9, 6},
		_0000001010001          = {9, 7},
		_000001000010           = {9, 8},
		_0000001001100          = {9, 9},
		_0000000111001          = {9, 10},
		_00000000110110         = {9, 11},
		_00000000100101         = {9, 12},
		_00000000010010         = {9, 13},
		_0000000000100111       = {9, 14},
		_000000000001011        = {9, 15},
		_0000100011             = {10, 0},
		_0000100001             = {10, 1},
		_0000011111             = {10, 2},
		_00000111001            = {10, 3},
		_00000101010            = {10, 4},
		_000001010010           = {10, 5},
		_000001001000           = {10, 6},
		_0000001010000          = {10, 7},
		_000000101111           = {10, 8},
		_0000000111010          = {10, 9},
		_00000000110111         = {10, 10},
		_0000000010101          = {10, 11},
		_00000000010110         = {10, 12},
		_000000000011010        = {10, 13},
		_0000000000100110       = {10, 14},
		_00000000000010110      = {10, 15},
		_00000110101            = {11, 0},
		_0000011001             = {11, 1},
		_0000010111             = {11, 2},
		_00000100110            = {11, 3},
		_000001000110           = {11, 4},
		_000000111100           = {11, 5},
		_000000110011           = {11, 6},
		_000000100100           = {11, 7},
		_0000000110111          = {11, 8},
		_0000000011010          = {11, 9},
		_0000000100010          = {11, 10},
		_00000000010111         = {11, 11},
		_000000000011011        = {11, 12},
		_000000000001110        = {11, 13},
		_000000000001001        = {11, 14},
		_0000000000000111       = {11, 15},
		_00000100010            = {12, 0},
		_00000100000            = {12, 1},
		_00000011100            = {12, 2},
		_000000100111           = {12, 3},
		_000000110001           = {12, 4},
		_0000001001011          = {12, 5},
		_000000011110           = {12, 6},
		_0000000110100          = {12, 7},
		_00000000110000         = {12, 8},
		_00000000101000         = {12, 9},
		_000000000110100        = {12, 10},
		_000000000011100        = {12, 11},
		_000000000010010        = {12, 12},
		_0000000000010001       = {12, 13},
		_0000000000001001       = {12, 14},
		_0000000000000101       = {12, 15},
		_000000101101           = {13, 0},
		_00000010101            = {13, 1},
		_000000100010           = {13, 2},
		_0000001000000          = {13, 3},
		_0000000111000          = {13, 4},
		_0000000110010          = {13, 5},
		_00000000110001         = {13, 6},
		_00000000101101         = {13, 7},
		_00000000011111         = {13, 8},
		_00000000010011         = {13, 9},
		_00000000001100         = {13, 10},
		_000000000001111        = {13, 11},
		_0000000000001010       = {13, 12},
		_000000000000111        = {13, 13},
		_0000000000000110       = {13, 14},
		_0000000000000011       = {13, 15},
		_0000000110000          = {14, 0},
		_000000010111           = {14, 1},
		_000000010100           = {14, 2},
		_0000000100111          = {14, 3},
		_0000000100100          = {14, 4},
		_0000000100011          = {14, 5},
		_000000000110101        = {14, 6},
		_00000000010101         = {14, 7},
		_00000000010000         = {14, 8},
		_00000000000010111      = {14, 9},
		_000000000001101        = {14, 10},
		_000000000001010        = {14, 11},
		_000000000000110        = {14, 12},
		_00000000000000001      = {14, 13},
		_0000000000000100       = {14, 14},
		_0000000000000010       = {14, 15},
		_000000010000           = {15, 0},
		_000000001111           = {15, 1},
		_0000000010001          = {15, 2},
		_00000000011011         = {15, 3},
		_00000000011001         = {15, 4},
		_00000000010100         = {15, 5},
		_000000000011101        = {15, 6},
		_00000000001011         = {15, 7},
		_000000000010001        = {15, 8},
		_000000000001100        = {15, 9},
		_0000000000010000       = {15, 10},
		_0000000000001000       = {15, 11},
		_0000000000000000001    = {15, 12},
		_000000000000000001     = {15, 13},
		_0000000000000000000    = {15, 14},
		_0000000000000001       = {15, 15}},
	[14] = {},
	[15] = {
		lin=0,
		_111                    = {0, 0},
		_1100                   = {0, 1},
		_10010                  = {0, 2},
		_0110101                = {0, 3},
		_0101111                = {0, 4},
		_01001100               = {0, 5},
		_001111100              = {0, 6},
		_001101100              = {0, 7},
		_001011001              = {0, 8},
		_0001111011             = {0, 9},
		_0001101100             = {0, 10},
		_00001110111            = {0, 11},
		_00001101011            = {0, 12},
		_00001010001            = {0, 13},
		_000001111010           = {0, 14},
		_0000000111111          = {0, 15},
		_1101                   = {1, 0},
		_101                    = {1, 1},
		_10000                  = {1, 2},
		_011011                 = {1, 3},
		_0101110                = {1, 4},
		_0100100                = {1, 5},
		_00111101               = {1, 6},
		_00110011               = {1, 7},
		_00101010               = {1, 8},
		_001000110              = {1, 9},
		_000110100              = {1, 10},
		_0001010011             = {1, 11},
		_0001000001             = {1, 12},
		_0000101001             = {1, 13},
		_00000111011            = {1, 14},
		_00000100100            = {1, 15},
		_10011                  = {2, 0},
		_10001                  = {2, 1},
		_01111                  = {2, 2},
		_011000                 = {2, 3},
		_0101001                = {2, 4},
		_0100010                = {2, 5},
		_00111011               = {2, 6},
		_00110000               = {2, 7},
		_00101000               = {2, 8},
		_001000000              = {2, 9},
		_000110010              = {2, 10},
		_0001001110             = {2, 11},
		_0000111110             = {2, 12},
		_00001010000            = {2, 13},
		_00000111000            = {2, 14},
		_00000100001            = {2, 15},
		_011101                 = {3, 0},
		_011100                 = {3, 1},
		_011001                 = {3, 2},
		_0101011                = {3, 3},
		_0100111                = {3, 4},
		_00111111               = {3, 5},
		_00110111               = {3, 6},
		_001011101              = {3, 7},
		_001001100              = {3, 8},
		_000111011              = {3, 9},
		_0001011101             = {3, 10},
		_0001001000             = {3, 11},
		_0000110110             = {3, 12},
		_00001001011            = {3, 13},
		_00000110010            = {3, 14},
		_00000011101            = {3, 15},
		_0110100                = {4, 0},
		_010110                 = {4, 1},
		_0101010                = {4, 2},
		_0101000                = {4, 3},
		_01000011               = {4, 4},
		_00111001               = {4, 5},
		_001011111              = {4, 6},
		_001001111              = {4, 7},
		_001001000              = {4, 8},
		_000111001              = {4, 9},
		_0001011001             = {4, 10},
		_0001000101             = {4, 11},
		_0000110001             = {4, 12},
		_00001000010            = {4, 13},
		_00000101110            = {4, 14},
		_00000011011            = {4, 15},
		_01001101               = {5, 0},
		_0100101                = {5, 1},
		_0100011                = {5, 2},
		_01000010               = {5, 3},
		_00111010               = {5, 4},
		_00110100               = {5, 5},
		_001011011              = {5, 6},
		_001001010              = {5, 7},
		_000111110              = {5, 8},
		_000110000              = {5, 9},
		_0001001111             = {5, 10},
		_0000111111             = {5, 11},
		_00001011010            = {5, 12},
		_00000111110            = {5, 13},
		_00000101000            = {5, 14},
		_000000100110           = {5, 15},
		_001111101              = {6, 0},
		_0100000                = {6, 1},
		_00111100               = {6, 2},
		_00111000               = {6, 3},
		_00110010               = {6, 4},
		_001011100              = {6, 5},
		_001001110              = {6, 6},
		_001000001              = {6, 7},
		_000110111              = {6, 8},
		_0001010111             = {6, 9},
		_0001000111             = {6, 10},
		_0000110011             = {6, 11},
		_00001001001            = {6, 12},
		_00000110011            = {6, 13},
		_000001000110           = {6, 14},
		_000000011110           = {6, 15},
		_001101101              = {7, 0},
		_00110101               = {7, 1},
		_00110001               = {7, 2},
		_001011110              = {7, 3},
		_001011000              = {7, 4},
		_001001011              = {7, 5},
		_001000010              = {7, 6},
		_0001111010             = {7, 7},
		_0001011011             = {7, 8},
		_0001001001             = {7, 9},
		_0000111000             = {7, 10},
		_0000101010             = {7, 11},
		_00001000000            = {7, 12},
		_00000101100            = {7, 13},
		_00000010101            = {7, 14},
		_000000011001           = {7, 15},
		_001011010              = {8, 0},
		_00101011               = {8, 1},
		_00101001               = {8, 2},
		_001001101              = {8, 3},
		_001001001              = {8, 4},
		_000111111              = {8, 5},
		_000111000              = {8, 6},
		_0001011100             = {8, 7},
		_0001001101             = {8, 8},
		_0001000010             = {8, 9},
		_0000101111             = {8, 10},
		_00001000011            = {8, 11},
		_00000110000            = {8, 12},
		_000000110101           = {8, 13},
		_000000100100           = {8, 14},
		_000000010100           = {8, 15},
		_001000111              = {9, 0},
		_00100010               = {9, 1},
		_001000011              = {9, 2},
		_000111100              = {9, 3},
		_000111010              = {9, 4},
		_000110001              = {9, 5},
		_0001011000             = {9, 6},
		_0001001100             = {9, 7},
		_0001000011             = {9, 8},
		_00001101010            = {9, 9},
		_00001000111            = {9, 10},
		_00000110110            = {9, 11},
		_00000100110            = {9, 12},
		_000000100111           = {9, 13},
		_000000010111           = {9, 14},
		_000000001111           = {9, 15},
		_0001101101             = {10, 0},
		_000110101              = {10, 1},
		_000110011              = {10, 2},
		_000101111              = {10, 3},
		_0001011010             = {10, 4},
		_0001010010             = {10, 5},
		_0000111010             = {10, 6},
		_0000111001             = {10, 7},
		_0000110000             = {10, 8},
		_00001001000            = {10, 9},
		_00000111001            = {10, 10},
		_00000101001            = {10, 11},
		_00000010111            = {10, 12},
		_000000011011           = {10, 13},
		_0000000111110          = {10, 14},
		_000000001001           = {10, 15},
		_0001010110             = {11, 0},
		_000101010              = {11, 1},
		_000101000              = {11, 2},
		_000100101              = {11, 3},
		_0001000110             = {11, 4},
		_0001000000             = {11, 5},
		_0000110100             = {11, 6},
		_0000101011             = {11, 7},
		_00001000110            = {11, 8},
		_00000110111            = {11, 9},
		_00000101010            = {11, 10},
		_00000011001            = {11, 11},
		_000000011101           = {11, 12},
		_000000010010           = {11, 13},
		_000000001011           = {11, 14},
		_0000000001011          = {11, 15},
		_00001110110            = {12, 0},
		_0001000100             = {12, 1},
		_000011110              = {12, 2},
		_0000110111             = {12, 3},
		_0000110010             = {12, 4},
		_0000101110             = {12, 5},
		_00001001010            = {12, 6},
		_00001000001            = {12, 7},
		_00000110001            = {12, 8},
		_00000100111            = {12, 9},
		_00000011000            = {12, 10},
		_00000010000            = {12, 11},
		_000000010110           = {12, 12},
		_000000001101           = {12, 13},
		_0000000001110          = {12, 14},
		_0000000000111          = {12, 15},
		_00001011011            = {13, 0},
		_0000101100             = {13, 1},
		_0000100111             = {13, 2},
		_0000100110             = {13, 3},
		_0000100010             = {13, 4},
		_00000111111            = {13, 5},
		_00000110100            = {13, 6},
		_00000101101            = {13, 7},
		_00000011111            = {13, 8},
		_000000110100           = {13, 9},
		_000000011100           = {13, 10},
		_000000010011           = {13, 11},
		_000000001110           = {13, 12},
		_000000001000           = {13, 13},
		_0000000001001          = {13, 14},
		_0000000000011          = {13, 15},
		_000001111011           = {14, 0},
		_00000111100            = {14, 1},
		_00000111010            = {14, 2},
		_00000110101            = {14, 3},
		_00000101111            = {14, 4},
		_00000101011            = {14, 5},
		_00000100000            = {14, 6},
		_00000010110            = {14, 7},
		_000000100101           = {14, 8},
		_000000011000           = {14, 9},
		_000000010001           = {14, 10},
		_000000001100           = {14, 11},
		_0000000001111          = {14, 12},
		_0000000001010          = {14, 13},
		_000000000010           = {14, 14},
		_0000000000001          = {14, 15},
		_000001000111           = {15, 0},
		_00000100101            = {15, 1},
		_00000100010            = {15, 2},
		_00000011110            = {15, 3},
		_00000011100            = {15, 4},
		_00000010100            = {15, 5},
		_00000010001            = {15, 6},
		_000000011010           = {15, 7},
		_000000010101           = {15, 8},
		_000000010000           = {15, 9},
		_000000001010           = {15, 10},
		_000000000110           = {15, 11},
		_0000000001000          = {15, 12},
		_0000000000110          = {15, 13},
		_0000000000010          = {15, 14},
		_0000000000000          = {15, 15}},
	[16] = {
		lin=1,
		_1                      = {0, 0},
		_0101                   = {0, 1},
		_001110                 = {0, 2},
		_00101100               = {0, 3},
		_001001010              = {0, 4},
		_000111111              = {0, 5},
		_0001101110             = {0, 6},
		_0001011101             = {0, 7},
		_00010101100            = {0, 8},
		_00010010101            = {0, 9},
		_00010001010            = {0, 10},
		_000011110010           = {0, 11},
		_000011100001           = {0, 12},
		_000011000011           = {0, 13},
		_0000101111000          = {0, 14},
		_000010001              = {0, 15},
		_011                    = {1, 0},
		_0100                   = {1, 1},
		_001100                 = {1, 2},
		_0010100                = {1, 3},
		_00100011               = {1, 4},
		_000111110              = {1, 5},
		_000110101              = {1, 6},
		_000101111              = {1, 7},
		_0001010011             = {1, 8},
		_0001001011             = {1, 9},
		_0001000100             = {1, 10},
		_00001110111            = {1, 11},
		_000011001001           = {1, 12},
		_00001101011            = {1, 13},
		_000011001111           = {1, 14},
		_00001001               = {1, 15},
		_001111                 = {2, 0},
		_001101                 = {2, 1},
		_0010111                = {2, 2},
		_00100110               = {2, 3},
		_001000011              = {2, 4},
		_000111010              = {2, 5},
		_0001100111             = {2, 6},
		_0001011010             = {2, 7},
		_00010100001            = {2, 8},
		_0001001000             = {2, 9},
		_00001111111            = {2, 10},
		_00001110101            = {2, 11},
		_00001101110            = {2, 12},
		_000011010001           = {2, 13},
		_000011001110           = {2, 14},
		_000010000              = {2, 15},
		_00101101               = {3, 0},
		_0010101                = {3, 1},
		_00100111               = {3, 2},
		_001000101              = {3, 3},
		_001000000              = {3, 4},
		_0001110010             = {3, 5},
		_0001100011             = {3, 6},
		_0001010111             = {3, 7},
		_00010011110            = {3, 8},
		_00010001100            = {3, 9},
		_000011111100           = {3, 10},
		_000011010100           = {3, 11},
		_000011000111           = {3, 12},
		_0000110000011          = {3, 13},
		_0000101101101          = {3, 14},
		_0000011010             = {3, 15},
		_001001011              = {4, 0},
		_00100100               = {4, 1},
		_001000100              = {4, 2},
		_001000001              = {4, 3},
		_0001110011             = {4, 4},
		_0001100101             = {4, 5},
		_00010110011            = {4, 6},
		_00010100100            = {4, 7},
		_00010011011            = {4, 8},
		_000100001000           = {4, 9},
		_000011110110           = {4, 10},
		_000011100010           = {4, 11},
		_0000110001011          = {4, 12},
		_0000101111110          = {4, 13},
		_0000101101010          = {4, 14},
		_000001001              = {4, 15},
		_001000010              = {5, 0},
		_00011110               = {5, 1},
		_000111011              = {5, 2},
		_000111000              = {5, 3},
		_0001100110             = {5, 4},
		_00010111001            = {5, 5},
		_00010101101            = {5, 6},
		_000100001001           = {5, 7},
		_00010001110            = {5, 8},
		_000011111101           = {5, 9},
		_000011101000           = {5, 10},
		_0000110010000          = {5, 11},
		_0000110000100          = {5, 12},
		_0000101111010          = {5, 13},
		_00000110111101         = {5, 14},
		_0000010000             = {5, 15},
		_0001101111             = {6, 0},
		_000110110              = {6, 1},
		_000110100              = {6, 2},
		_0001100100             = {6, 3},
		_00010111000            = {6, 4},
		_00010110010            = {6, 5},
		_00010100000            = {6, 6},
		_00010000101            = {6, 7},
		_000100000001           = {6, 8},
		_000011110100           = {6, 9},
		_000011100100           = {6, 10},
		_000011011001           = {6, 11},
		_0000110000001          = {6, 12},
		_0000101101110          = {6, 13},
		_00001011001011         = {6, 14},
		_0000001010             = {6, 15},
		_0001100010             = {7, 0},
		_000110000              = {7, 1},
		_0001011011             = {7, 2},
		_0001011000             = {7, 3},
		_00010100101            = {7, 4},
		_00010011101            = {7, 5},
		_00010010100            = {7, 6},
		_000100000101           = {7, 7},
		_000011111000           = {7, 8},
		_0000110010111          = {7, 9},
		_0000110001101          = {7, 10},
		_0000101110100          = {7, 11},
		_0000101111100          = {7, 12},
		_000001101111001        = {7, 13},
		_000001101110100        = {7, 14},
		_0000001000             = {7, 15},
		_0001010101             = {8, 0},
		_0001010100             = {8, 1},
		_0001010001             = {8, 2},
		_00010011111            = {8, 3},
		_00010011100            = {8, 4},
		_00010001111            = {8, 5},
		_000100000100           = {8, 6},
		_000011111001           = {8, 7},
		_0000110101011          = {8, 8},
		_0000110010001          = {8, 9},
		_0000110001000          = {8, 10},
		_0000101111111          = {8, 11},
		_00001011010111         = {8, 12},
		_00001011001001         = {8, 13},
		_00001011000100         = {8, 14},
		_0000000111             = {8, 15},
		_00010011010            = {9, 0},
		_0001001100             = {9, 1},
		_0001001001             = {9, 2},
		_00010001101            = {9, 3},
		_00010000011            = {9, 4},
		_000100000000           = {9, 5},
		_000011110101           = {9, 6},
		_0000110101010          = {9, 7},
		_0000110010110          = {9, 8},
		_0000110001010          = {9, 9},
		_0000110000000          = {9, 10},
		_00001011011111         = {9, 11},
		_0000101100111          = {9, 12},
		_00001011000110         = {9, 13},
		_0000101100000          = {9, 14},
		_00000001011            = {9, 15},
		_00010001011            = {10, 0},
		_00010000001            = {10, 1},
		_0001000011             = {10, 2},
		_00001111101            = {10, 3},
		_000011110111           = {10, 4},
		_000011101001           = {10, 5},
		_000011100101           = {10, 6},
		_000011011011           = {10, 7},
		_0000110001001          = {10, 8},
		_00001011100111         = {10, 9},
		_00001011100001         = {10, 10},
		_00001011010000         = {10, 11},
		_000001101110101        = {10, 12},
		_000001101110010        = {10, 13},
		_00000110110111         = {10, 14},
		_0000000100             = {10, 15},
		_000011110011           = {11, 0},
		_00001111000            = {11, 1},
		_00001110110            = {11, 2},
		_00001110011            = {11, 3},
		_000011100011           = {11, 4},
		_000011011111           = {11, 5},
		_0000110001100          = {11, 6},
		_00001011101010         = {11, 7},
		_00001011100110         = {11, 8},
		_00001011100000         = {11, 9},
		_00001011010001         = {11, 10},
		_00001011001000         = {11, 11},
		_00001011000010         = {11, 12},
		_0000011011111          = {11, 13},
		_00000110110100         = {11, 14},
		_00000000110            = {11, 15},
		_000011001010           = {12, 0},
		_000011100000           = {12, 1},
		_000011011110           = {12, 2},
		_000011011010           = {12, 3},
		_000011011000           = {12, 4},
		_0000110000101          = {12, 5},
		_0000110000010          = {12, 6},
		_0000101111101          = {12, 7},
		_0000101101100          = {12, 8},
		_000001101111000        = {12, 9},
		_00000110111011         = {12, 10},
		_00001011000011         = {12, 11},
		_00000110111000         = {12, 12},
		_00000110110101         = {12, 13},
		_0000011011000000       = {12, 14},
		_00000000100            = {12, 15},
		_00001011101011         = {13, 0},
		_000011010011           = {13, 1},
		_000011010010           = {13, 2},
		_000011010000           = {13, 3},
		_0000101110010          = {13, 4},
		_0000101111011          = {13, 5},
		_00001011011110         = {13, 6},
		_00001011010011         = {13, 7},
		_00001011001010         = {13, 8},
		_0000011011000111       = {13, 9},
		_000001101110011        = {13, 10},
		_000001101101101        = {13, 11},
		_000001101101100        = {13, 12},
		_00000110110000011      = {13, 13},
		_000001101100001        = {13, 14},
		_00000000010            = {13, 15},
		_0000101111001          = {14, 0},
		_0000101110001          = {14, 1},
		_00001100110            = {14, 2},
		_000010111011           = {14, 3},
		_00001011010110         = {14, 4},
		_00001011010010         = {14, 5},
		_0000101100110          = {14, 6},
		_00001011000111         = {14, 7},
		_00001011000101         = {14, 8},
		_000001101100010        = {14, 9},
		_0000011011000110       = {14, 10},
		_000001101100111        = {14, 11},
		_00000110110000010      = {14, 12},
		_000001101100110        = {14, 13},
		_00000110110010         = {14, 14},
		_00000000000            = {14, 15},
		_000001100              = {15, 0},
		_00001010               = {15, 1},
		_00000111               = {15, 2},
		_000001011              = {15, 3},
		_000001010              = {15, 4},
		_0000010001             = {15, 5},
		_0000001011             = {15, 6},
		_0000001001             = {15, 7},
		_00000001101            = {15, 8},
		_00000001100            = {15, 9},
		_00000001010            = {15, 10},
		_00000000111            = {15, 11},
		_00000000101            = {15, 12},
		_00000000011            = {15, 13},
		_00000000001            = {15, 14},
		_00000011               = {15, 15}},
	[17] = {ref=16, lin=2}, -- lin2 16
	[18] = {ref=16, lin=3}, -- lin3 16
	[19] = {ref=16, lin=4}, -- lin4 16
	[20] = {ref=16, lin=6}, -- lin6 16
	[21] = {ref=16, lin=8}, -- lin8 16
	[22] = {ref=16, lin=10}, -- lin10 16
	[23] = {ref=16, lin=13}, -- lin13 16
	[24] = {
		lin=4,
		_1111                   = {0, 0},
		_1101                   = {0, 1},
		_101110                 = {0, 2},
		_1010000                = {0, 3},
		_10010010               = {0, 4},
		_100000110              = {0, 5},
		_011111000              = {0, 6},
		_0110110010             = {0, 7},
		_0110101010             = {0, 8},
		_01010011101            = {0, 9},
		_01010001101            = {0, 10},
		_01010001001            = {0, 11},
		_01001101101            = {0, 12},
		_01000000101            = {0, 13},
		_010000001000           = {0, 14},
		_001011000              = {0, 15},
		_1110                   = {1, 0},
		_1100                   = {1, 1},
		_10101                  = {1, 2},
		_100110                 = {1, 3},
		_1000111                = {1, 4},
		_10000010               = {1, 5},
		_01111010               = {1, 6},
		_011011000              = {1, 7},
		_011010001              = {1, 8},
		_011000110              = {1, 9},
		_0101000111             = {1, 10},
		_0101011001             = {1, 11},
		_0100111111             = {1, 12},
		_0100101001             = {1, 13},
		_0100010111             = {1, 14},
		_00101010               = {1, 15},
		_101111                 = {2, 0},
		_10110                  = {2, 1},
		_101001                 = {2, 2},
		_1001010                = {2, 3},
		_1000100                = {2, 4},
		_10000000               = {2, 5},
		_01111000               = {2, 6},
		_011011101              = {2, 7},
		_011001111              = {2, 8},
		_011000010              = {2, 9},
		_010110110              = {2, 10},
		_0101010100             = {2, 11},
		_0100111011             = {2, 12},
		_0100100111             = {2, 13},
		_01000011101            = {2, 14},
		_0010010                = {2, 15},
		_1010001                = {3, 0},
		_100111                 = {3, 1},
		_1001011                = {3, 2},
		_1000110                = {3, 3},
		_10000110               = {3, 4},
		_01111101               = {3, 5},
		_01110100               = {3, 6},
		_011011100              = {3, 7},
		_011001100              = {3, 8},
		_010111110              = {3, 9},
		_010110010              = {3, 10},
		_0101000101             = {3, 11},
		_0100110111             = {3, 12},
		_0100100101             = {3, 13},
		_0100001111             = {3, 14},
		_0010000                = {3, 15},
		_10010011               = {4, 0},
		_1001000                = {4, 1},
		_1000101                = {4, 2},
		_10000111               = {4, 3},
		_01111111               = {4, 4},
		_01110110               = {4, 5},
		_01110000               = {4, 6},
		_011010010              = {4, 7},
		_011001000              = {4, 8},
		_010111100              = {4, 9},
		_0101100000             = {4, 10},
		_0101000011             = {4, 11},
		_0100110010             = {4, 12},
		_0100011101             = {4, 13},
		_01000011100            = {4, 14},
		_0001110                = {4, 15},
		_100000111              = {5, 0},
		_1000010                = {5, 1},
		_10000001               = {5, 2},
		_01111110               = {5, 3},
		_01110111               = {5, 4},
		_01110010               = {5, 5},
		_011010110              = {5, 6},
		_011001010              = {5, 7},
		_011000000              = {5, 8},
		_010110100              = {5, 9},
		_0101010101             = {5, 10},
		_0100111101             = {5, 11},
		_0100101101             = {5, 12},
		_0100011001             = {5, 13},
		_0100000110             = {5, 14},
		_0001100                = {5, 15},
		_011111001              = {6, 0},
		_01111011               = {6, 1},
		_01111001               = {6, 2},
		_01110101               = {6, 3},
		_01110001               = {6, 4},
		_011010111              = {6, 5},
		_011001110              = {6, 6},
		_011000011              = {6, 7},
		_010111001              = {6, 8},
		_0101011011             = {6, 9},
		_0101001010             = {6, 10},
		_0100110100             = {6, 11},
		_0100100011             = {6, 12},
		_0100010000             = {6, 13},
		_01000001000            = {6, 14},
		_0001010                = {6, 15},
		_0110110011             = {7, 0},
		_01110011               = {7, 1},
		_01101111               = {7, 2},
		_01101101               = {7, 3},
		_011010011              = {7, 4},
		_011001011              = {7, 5},
		_011000100              = {7, 6},
		_010111011              = {7, 7},
		_0101100001             = {7, 8},
		_0101001100             = {7, 9},
		_0100111001             = {7, 10},
		_0100101010             = {7, 11},
		_0100011011             = {7, 12},
		_01000010011            = {7, 13},
		_00101111101            = {7, 14},
		_00010001               = {7, 15},
		_0110101011             = {8, 0},
		_011010100              = {8, 1},
		_011010000              = {8, 2},
		_011001101              = {8, 3},
		_011001001              = {8, 4},
		_011000001              = {8, 5},
		_010111010              = {8, 6},
		_010110001              = {8, 7},
		_010101001              = {8, 8},
		_0101000000             = {8, 9},
		_0100101111             = {8, 10},
		_0100011110             = {8, 11},
		_0100001100             = {8, 12},
		_01000000010            = {8, 13},
		_00101111001            = {8, 14},
		_00010000               = {8, 15},
		_0101001111             = {9, 0},
		_011000111              = {9, 1},
		_011000101              = {9, 2},
		_010111111              = {9, 3},
		_010111101              = {9, 4},
		_010110101              = {9, 5},
		_010101110              = {9, 6},
		_0101001101             = {9, 7},
		_0101000001             = {9, 8},
		_0100110001             = {9, 9},
		_0100100001             = {9, 10},
		_0100010011             = {9, 11},
		_01000001001            = {9, 12},
		_00101111011            = {9, 13},
		_00101110011            = {9, 14},
		_00001011               = {9, 15},
		_01010011100            = {10, 0},
		_010111000              = {10, 1},
		_010110111              = {10, 2},
		_010110011              = {10, 3},
		_010101111              = {10, 4},
		_0101011000             = {10, 5},
		_0101001011             = {10, 6},
		_0100111010             = {10, 7},
		_0100110000             = {10, 8},
		_0100100010             = {10, 9},
		_0100010101             = {10, 10},
		_01000010010            = {10, 11},
		_00101111111            = {10, 12},
		_00101110101            = {10, 13},
		_00101101110            = {10, 14},
		_00001010               = {10, 15},
		_01010001100            = {11, 0},
		_0101011010             = {11, 1},
		_010101011              = {11, 2},
		_010101000              = {11, 3},
		_010100100              = {11, 4},
		_0100111110             = {11, 5},
		_0100110101             = {11, 6},
		_0100101011             = {11, 7},
		_0100011111             = {11, 8},
		_0100010100             = {11, 9},
		_0100000111             = {11, 10},
		_01000000001            = {11, 11},
		_00101110111            = {11, 12},
		_00101110000            = {11, 13},
		_00101101010            = {11, 14},
		_00000110               = {11, 15},
		_01010001000            = {12, 0},
		_0101000010             = {12, 1},
		_0100111100             = {12, 2},
		_0100111000             = {12, 3},
		_0100110011             = {12, 4},
		_0100101110             = {12, 5},
		_0100100100             = {12, 6},
		_0100011100             = {12, 7},
		_0100001101             = {12, 8},
		_0100000101             = {12, 9},
		_01000000000            = {12, 10},
		_00101111000            = {12, 11},
		_00101110010            = {12, 12},
		_00101101100            = {12, 13},
		_00101100111            = {12, 14},
		_00000100               = {12, 15},
		_01001101100            = {13, 0},
		_0100101100             = {13, 1},
		_0100101000             = {13, 2},
		_0100100110             = {13, 3},
		_0100100000             = {13, 4},
		_0100011010             = {13, 5},
		_0100010001             = {13, 6},
		_0100001010             = {13, 7},
		_01000000011            = {13, 8},
		_00101111100            = {13, 9},
		_00101110110            = {13, 10},
		_00101110001            = {13, 11},
		_00101101101            = {13, 12},
		_00101101001            = {13, 13},
		_00101100101            = {13, 14},
		_00000010               = {13, 15},
		_010000001001           = {14, 0},
		_0100011000             = {14, 1},
		_0100010110             = {14, 2},
		_0100010010             = {14, 3},
		_0100001011             = {14, 4},
		_0100001000             = {14, 5},
		_0100000011             = {14, 6},
		_00101111110            = {14, 7},
		_00101111010            = {14, 8},
		_00101110100            = {14, 9},
		_00101101111            = {14, 10},
		_00101101011            = {14, 11},
		_00101101000            = {14, 12},
		_00101100110            = {14, 13},
		_00101100100            = {14, 14},
		_00000000               = {14, 15},
		_00101011               = {15, 0},
		_0010100                = {15, 1},
		_0010011                = {15, 2},
		_0010001                = {15, 3},
		_0001111                = {15, 4},
		_0001101                = {15, 5},
		_0001011                = {15, 6},
		_0001001                = {15, 7},
		_0000111                = {15, 8},
		_0000110                = {15, 9},
		_0000100                = {15, 10},
		_00000111               = {15, 11},
		_00000101               = {15, 12},
		_00000011               = {15, 13},
		_00000001               = {15, 14},
		_0011                   = {15, 15}},
	[25] = {ref=24, lin=5}, -- lin5 24
	[26] = {ref=24, lin=6}, -- lin6 24
	[27] = {ref=24, lin=7}, -- lin7 24
	[28] = {ref=24, lin=8}, -- lin8 24
	[29] = {ref=24, lin=9}, -- lin9 24
	[30] = {ref=24, lin=11}, -- lin11 24
	[31] = {ref=24, lin=13}, -- lin13 24
	a  = {
		_1      = {0, 0, 0, 0},
		_0101   = {0, 0, 0, 1},
		_0100   = {0, 0, 1, 0},
		_00101  = {0, 0, 1, 1},
		_0110   = {0, 1, 0, 0},
		_000101 = {0, 1, 0, 1},
		_00100  = {0, 1, 1, 0},
		_000100 = {0, 1, 1, 1},
		_0111   = {1, 0, 0, 0},
		_00011  = {1, 0, 0, 1},
		_00110  = {1, 0, 1, 0},
		_000000 = {1, 0, 1, 1},
		_00111  = {1, 1, 0, 0},
		_000010 = {1, 1, 0, 1},
		_000011 = {1, 1, 1, 0},
		_000001 = {1, 1, 1, 1}},
	b  = {
		_1111   = {0, 0, 0, 0},
		_1110   = {0, 0, 0, 1},
		_1101   = {0, 0, 1, 0},
		_1100   = {0, 0, 1, 1},
		_1011   = {0, 1, 0, 0},
		_1010   = {0, 1, 0, 1},
		_1001   = {0, 1, 1, 0},
		_1000   = {0, 1, 1, 1},
		_0111   = {1, 0, 0, 0},
		_0110   = {1, 0, 0, 1},
		_0101   = {1, 0, 1, 0},
		_0100   = {1, 0, 1, 1},
		_0011   = {1, 1, 0, 0},
		_0010   = {1, 1, 0, 1},
		_0001   = {1, 1, 1, 0},
		_0000   = {1, 1, 1, 1}}
}

local val_0__4

function curbit()
	local byte, bit = cur()
	return byte * 8 + bit
end

function rsyncsafe_int32()
	local val = 0
	rbit("marker", 1)
	val = (rbit("bit[27..21]", 7) << 21)
	rbit("marker", 1)
	val = val + (rbit("bit[20..14]", 7) << 14)
	rbit("marker", 1)
	val = val + (rbit("bit[13..7]", 7) << 7)
	rbit("marker", 1)
	val = val + rbit("bit[6..0]", 7)
	set("syncsafe_integer", val)
	return val
end

function check_ID3v2()
	local version
	if lstr(3) ~= "ID3" then
		return
	end
	
	-- タグヘッダ
	cstr("header", 3, "ID3")
	rbyte("ID3_version_major", 1)
	rbyte("ID3_version_minor", 1)
	if get("ID3_version_major") == 2 then
		version = "v2.2.0"
		rbit("asynchronous_flag", 1)
		rbit("compress", 1)
		cbit("reserved", 6, 0)
	elseif get("ID3_version_major") == 3 and get("ID3_version_minor") == 0 then
		version = "v2.3.0"
		rbit("asynchronous_flag", 1)
		rbit("extension_flag", 1)
		rbit("testing_flag", 1)
		cbit("reserved", 5, 0)
	elseif (get("ID3_version_major") == 3 and get("ID3_version_minor") == 1)
	or     (get("ID3_version_major") == 4 and get("ID3_version_minor") == 0) then
		version = "v2.4.0"
		rbit("asynchronous_flag", 1)
		rbit("extension_flag", 1)
		rbit("testing_flag", 1)
		rbit("footer_flag", 1)
		cbit("flags", 4, 0)
	end	
	local id3v2_size = rsyncsafe_int32()
	set("id3v2_size", id3v2_size)

	-- 拡張ヘッダ
	if version == "v2.3.0" then
		if get("extension_flag") ~= 0 then
			rbyte("extended_header_size", 4)
			rbit("crc_flag", 1)
			cbit("reserved", 15, 0)
			rbyte("extension_flag", 2)
			rbyte("padding_size", 4)
			if get("crc_flag") ~= 0 then
				rbyte("crc_data", 4)
			end
		end
	elseif version == "v2.4.0" then
		if get("extension_flag") ~= 0 then
			set("extended_header_size", rsyncsafe_int32())
			rbit("flag_size", 8, 1)
			rbit("reserved", 1, 0)
			rbit("update_flag", 1, 0)
			rbit("crc_flag", 1, 0)
			rbit("limitation_flag", 1, 0)
			rbit("reserved", 4, 0)
			if get("crc_flag") ~= 0 then
				rbyte("crc_data", 5)
			end
			if get("limitation_flag") ~= 0 then
				rbit("tagsize_limitation", 2)
				rbit("text_code_limitation", 1)
				rbit("text_size_limitation", 2)
				rbit("picture_format_limitation", 2)
				rbit("picture_size_limitation", 2)
			end
		end
	end

	-- フレーム
	print("====================================================")
	print("ID3"..version)
	while true do
		if ID3_frame(version) == false then
			break
		end
	end
	print("====================================================")
end

function ID3_frame(version)
	local begin = cur()
	local frame_id
	local frame_size

	if version == "v2.2.0" then
		local tag = lstr(3)
		--print(tag)
		if string.match(tag, "[A-Z0-9][A-Z0-9][A-Z0-9]") == nil then
			return false
		end
		frame_id = rstr("frame_id", 3)
		frame_size = rbyte("frame_size", 3)
	elseif version == "v2.3.0" then
		local tag = lstr(4)
		--print(tag)
		if string.match(tag, "[A-Z0-9][A-Z0-9][A-Z0-9]") == nil then
			return false
		end
		frame_id = rstr("frame_id", 4)
		frame_size = rbyte("frame_size", 4)
		rbit("discaed_tag_update_flag", 1)
		rbit("discaed_file_update_flag", 1)
		rbit("read_only_flag", 1)
		cbit("reserved", 5, 0)
		rbit("compressed_flag", 1)
		rbit("enclypted_flag", 1)
		rbit("group_flag", 1)
		cbit("reserved", 5, 0)
		if get("compressed_flag") ~= 0 then
			rbyte("original_size", 4)
		end
		if get("enclypted_flag") ~= 0 then
			rbyte("enclyption_type", 1)
		end
	elseif version == "v2.4.0" then
		local tag = lstr(4)
		--print(tag)
		if string.match(tag, "[A-Z0-9][A-Z0-9][A-Z0-9][A-Z0-9]") == nil then
			return false
		end
		frame_id = rstr("frame_id", 4)
		frame_size = rsyncsafe_int32()
		set("frame_size", frame_size)
		cbit("reserved", 1, 0)
		rbit("discaed_tag_update_flag", 1)
		rbit("discaed_file_update_flag", 1)
		rbit("read_only", 1)
		cbit("reserved", 4, 0)
		cbit("reserved", 1, 0)
		rbit("group_flag", 1)
		cbit("reserved", 2, 0)
		rbit("compressed_flag", 1)
		rbit("enclypted_flag", 1)
		rbit("asynchronous_flag", 1)
		rbit("original_size_flag", 1)
		if get("compressed_flag") ~= 0 then
			rbyte("original_size", 4)
		end
		if get("enclypted_flag") ~= 0 then
			rbyte("enclyption_type", 1)
		end
	end

	push("ID3v2_frame")

	if     frame_id == "TT2" or frame_id == "TIT2" then rbyte("encode", 1) print("Title        : "..rstr("frame_data", frame_size-1))
	elseif frame_id == "TP1" or frame_id == "TPE1" then rbyte("encode", 1) print("Artist       : "..rstr("frame_data", frame_size-1))
	elseif frame_id == "TP2" or frame_id == "TPE2" then rbyte("encode", 1) print("Album artist : "..rstr("frame_data", frame_size-1))
	elseif frame_id == "TAL" or frame_id == "TALB" then rbyte("encode", 1) print("Album        : "..rstr("frame_data", frame_size-1))
	elseif frame_id == "TYE" or frame_id == "TYER" then rbyte("encode", 1) print("Year         : "..rstr("frame_data", frame_size-1))
	elseif frame_id == "COM" or frame_id == "COMM" then rbyte("encode", 1) print("Comment      : "..rstr("frame_data", frame_size-1))	
	elseif frame_id == "TRK" or frame_id == "TRCK" then rbyte("encode", 1) print("Track        : "..rstr("frame_data", frame_size-1))	
	elseif frame_id == "TCO" or frame_id == "TCON" then rbyte("encode", 1) print("Genre        : "..rstr("frame_data", frame_size-1))
	elseif frame_id == "TCM" or frame_id == "TCOM" then rbyte("encode", 1) print("Composer     : "..rstr("frame_data", frame_size-1))	
	elseif frame_id == "TPA" or frame_id == "TPOS" then rbyte("encode", 1) print("Disk no.     : "..rstr("frame_data", frame_size-1))	
	elseif frame_id == "TEN" or frame_id == "TENC" then rbyte("encode", 1) print("Encoder      : "..rstr("frame_data", frame_size-1))
	elseif frame_id == "TCP" or frame_id == "TCMP" then rbyte("encode", 1) print("Compilation  : "..rstr("frame_data", frame_size-1))
	elseif frame_id == "TBP" or frame_id == "TBPM" then rbyte("encode", 1) print("Bpm          : "..rstr("frame_data", frame_size-1))
	elseif frame_id == "TT1" or frame_id == "TIT1" then rbyte("encode", 1) print("Group        : "..rstr("frame_data", frame_size-1))
	elseif frame_id == "PIC" or frame_id == "APIC" then
		print("export picture data --> ".."pic"..hexstr(frame_size)..".jpg")
		local ofs = fstr("FF D8", 100, false)
		if ofs ~= 100 then
			rbyte("header", ofs)
			tbyte("picture_data", frame_size-ofs, __out_dir__.."pic"..hexstr(frame_size)..".jpg")
		end
	else
		rbyte("encode", 1)
		print("unknown_info", frame_id, rstr("unknown_frame_data", frame_size-1))
	end
	
	pop("ID3v2_frame")
	
	return true
end

function check_ID3v1()
	local begin = cur()
	seek(get_size() - 128)
	if lstr(3) ~= "TAG" then
		seek(begin)
		return
	end

	push("ID3v1")
	print("Header     : ", rstr("Header", 3))
	print("Title      : ", rstr("Title", 30))
	print("Artist     : ", rstr("Artist", 30))
	print("Album      : ", rstr("Album", 30))
	print("Year       : ", rstr("Year", 4))
	print("Comment    : ", rstr("Comment", 28))
	print("Track_flag : ", rbyte("Track_flag", 1))
	print("Track      : ", rbyte("Track", 1))
	print("Genru      : ", rbyte("Genru", 1))
	pop("ID3v1")

	seek(begin)
end

function next_start_code()
	local bit = select(2, cur())
	if bit ~= 0 then
		cbit("zero_bit", 8-1, 0)
	end
	while lbyte(3) ~= 0x000001 do
		cbyte("zero_byte", 1, 0)
	end
end

function sequence(size)
	while cur() < size do
		check_progress(false)
		seek(cur(), 0)
		if lbit(12) == syncword then
			frame()
		else
			print("# syncword not found.", hexstr(cur()))
			seek(cur()+1, 0)
			fbyte(0xff)
		end
	end
end

function frame()
	local begin = cur()
	nest_call("header", header)
	
	-- mp3は計算でサイズ取得が必要orz
	local frame_size = math.floor(144 * bitrate_table[get("bitrate_index")] / sampling_freq_table[get("sampling_frequency")]) 
    if get("padding_bit") ~= 0 then
    	frame_size = frame_size + 1
    end
	
	nest_call("error_check", error_check)
	nest_call("audio_data", audio_data)
	-- nest_call("ancillary_data", ancillary_data)

	seek(begin + frame_size)
end


function header()
	cbit("syncword", 12, syncword) -- bits bslbf
	rbit("ID", 1) -- bit bslbf
	cbit("layer", 2, 1) -- bits bslbf
	rbit("protection_bit", 1) -- bit bslbf
	rbit("bitrate_index", 4) -- bits bslbf
	rbit("sampling_frequency", 2) -- bits bslbf
	rbit("padding_bit", 1) -- bit bslbf
	rbit("private_bit", 1) -- bit bslbf
	rbit("mode", 2) -- bits bslbf
	rbit("mode_extension", 2) -- bits bslbf
	rbit("copyright", 1) -- bit bslbf
	rbit("original/home", 1) -- bit bslbf
	rbit("emphasis", 2) -- bits bslbf
end

function error_check()
	if get("protection_bit") == 0 then
		rbit("crc_check", 16) -- bits rpchof
	end
end

-- 各種テーブル[ch][gr]は配列の次元を入れ替えて[gr][ch]として保存
local scfsi = {}
local big_values = {}
local global_gain = {}
local blocksplit_flag = {}
local block_type = {}
local switch_point = {}
local switch_point_l = {}
local switch_point_s = {}
local scalefac_compress = {}
local scalefac = {}
local part2_3_length = {}
local table_select = {}
local count1table_select = {}
local region_address1 = {}
local region_address2 = {}
local slen_table = {
	slen1={0, 0, 0, 0, 3, 1, 1, 1, 2, 2, 2, 3, 3, 3, 4, 4},
	slen2={0, 1, 2, 3, 0, 1, 2, 3, 1, 2, 3, 1, 2, 3, 2, 3}}
-- local sfb_num = {
-- 	_32 = {4,8,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,},
-- 	_441= {},
-- 	_48 = {}
-- }
function audio_data()	
	if get("mode") == single_channel then
		rbit("main_data_end", 9) -- bits uimsbf
		rbit("private_bits",  5) -- bits bslbf
		for scfsi_band = 0, 4-1 do
			scfsi[scfsi_band] = rbit("scfsi[scfsi_band]", 1) -- bits bslbf
		end

		for gr=0, 2-1 do
			part2_3_length[gr] = rbit("part2_3_length[gr]", 12) -- bits uimsbf
			rbit("big_values[gr]", 9) -- bits uimsbf
			rbit("global_gain[gr]", 8) -- bits uimsbf
			scalefac_compress[gr] = rbit("scalefac_compress[gr]", 4) -- bits bslbf
			blocksplit_flag[gr] = rbit("blocksplit_flag[gr]", 1) -- bitbslbf
			if blocksplit_flag[gr] then
				block_type[gr] = rbit("block_type[gr]", 2) -- bits bslbf
				switch_point[gr] = rbit("switch_point[gr]", 1) -- bits uimsbf
				if switch_point[gr] == 0 then
					switch_point_l[gr] = 0
					switch_point_s[gr] = 0
				else 
					switch_point_l[gr] = 8
					switch_point_s[gr] = 3
				end
				for region=0, 2-1 do
					rbit("table_select[region][gr]", 5) -- bits bslbf
				end
				for window=0, 3-1 do
					rbit("subblock_gain[window][gr]", 3) -- bits uimsbf
				end
			else
				for region=0, 3-1 do
					rbit("table_select[region][gr]",  5) -- bits bslbf
					rbit("region_address1[gr]",  4) -- bits bslbf
					rbit("region_address2[gr]",  3) -- bits bslbf
				end
			end
			rbit("preflag[gr]",  1) -- bitbslbf
			rbit("scalefac_scale[gr]",  1) -- bitbslbf
			count1table_select[gr] = rbit("count1table_select[gr]",  1) -- bitbslbf
		end
		
		-- The main_data follows. It does not follow the above side information in
		-- the bitstream. The main_data ends at a location in the main_data
		-- bitstream preceding the frame header of the following frame at an offset
		-- given by the value of main_data_end (see definition of main_data_end and
		-- 3-Annex Fig.3-A.7.1)
		
		
		
		if true then
			seekoff(0, get("main_data_end"))
			return
		end
		
		
		
		for gr=0, 2-1 do
			if blocksplit_flag[gr] == 1
			and block_type[gr] == 2 then
				for cb=0, switch_point_l[gr]-1 do
					if scfsi[cb]==0 or gr==0 then
						rbit("scalefac[cb][gr]", slen_table.slen1[scalefac_compress[gr][ch]+1]) -- bits uimsbf
					end
				end

				for cb=switch_point_s[gr], 12-1 do
					for window=0, 3-1 do
						if (scfsi[cb]==0) or (gr==0) then
							rbit("scalefac[cb][window][gr]", slen_table.slen2[scalefac_compress[gr][ch]+1]) -- bits uimsbf
						end
					end
				end
			else
				for cb=0, 22-1 do
					if (scfsi[cb]==0) or (gr==0) then
						rbit("scalefac[cb][gr]", val_0__4) -- bits uimsbf
					end
				end
			end
			rbit("Huffmancodebits", (part2_3_length-part2_length)) -- bits bslbf
		end
		
		while position ~= main_data_end do
			rbit("ancillary_bit", 1) -- bitbslbf
		end
	end

	if (get("mode") == stereo) or (get("mode") == dual_channel) or (get("mode") == joint_stereo) then
		rbit("main_data_end", 9) -- bits uimsbf
		rbit("private_bits", 3) -- bits bslbf
		for ch=0, 2-1 do
			scfsi[ch] = {}
			for scfsi_band=0, 4-1 do
				scfsi[ch][scfsi_band] = rbit("scfsi[scfsi_band][ch]", 1) -- bits bslbf
			end
		end
		for gr=0, 2-1 do
			part2_3_length[gr] = {}
			blocksplit_flag[gr] = {}
			big_values[gr] = {}
			global_gain[gr] = {}
			scalefac_compress[gr] = {}
			scalefac[gr] = {}
			block_type[gr] = {}
			switch_point[gr] = {}
			switch_point_l[gr] = {}
			switch_point_s[gr] = {}
			table_select[gr] = {}
			count1table_select[gr] = {}
			region_address1[gr] = {}
			region_address2[gr] = {}
			for ch=0, 2-1 do
				table_select[gr][ch] = {}
				scalefac[gr][ch] = {}
				part2_3_length[gr][ch]    = rbit("part2_3_length[gr][ch]", 12) -- bits uimsbf 
				big_values[gr][ch]        = rbit("big_values[gr][ch]", 9) -- bits uimsbf
				global_gain[gr][ch]       = rbit("global_gain[gr][ch]", 8) -- bits uimsbf
				scalefac_compress[gr][ch] = rbit("scalefac_compress[gr][ch]", 4) -- bits bslbf
				blocksplit_flag[gr][ch]   = rbit("blocksplit_flag[gr][ch]", 1) -- bitbslbf
				if blocksplit_flag[gr][ch] ~= 0 then
					block_type[gr][ch] = rbit("block_type[gr][ch]", 2) -- bits bslbf 
					switch_point[gr][ch] = rbit("switch_point[gr][ch]", 1) -- bits uimsbf
					if switch_point[gr] == 0 then
						switch_point_l[gr][ch] = 0
						switch_point_s[gr][ch] = 0
					else 
						switch_point_l[gr][ch] = 8
						switch_point_s[gr][ch] = 3
					end
					for region=0, 2-1 do
						table_select[gr][ch][region] = rbit("table_select[region][gr][ch]", 5) -- bits bslbf
					end
					for window=0, 3-1 do
						rbit("subblock_gain[window][gr][ch]", 3) -- bits uimsbf
					end
				else
					block_type[gr][ch] = 0
					switch_point[gr][ch] = 0
					for region=0, 3-1 do
						table_select[gr][ch][region] = rbit("table_select[region][gr][ch]", 5) -- bits bslbf
						print(table_select[gr][ch][region], gr, ch, region, table_select[gr][ch][region])
					end
					region_address1[gr][ch] = rbit("region_address1[gr][ch]", 4) -- bits bslbf
					region_address2[gr][ch] = rbit("region_address2[gr][ch]", 3) -- bits bslbf
				end
				rbit("preflag[gr][ch]", 1) -- bitbslbf
				rbit("scalefac_scale[gr][ch]", 1) -- bitbslbf
				count1table_select[gr][ch] = rbit("count1table_select[gr][ch]", 1) -- bitbslbf
			end
		end

		-- The main_data follows. It does not follow the above side information in
		-- the bitstream. The main_data ends at a location in the main_data
		-- bitstream preceding the frame header of the following frame at an offset
		-- given by the value of main_data_end.

		local main_data_begin = curbit()
		-- 576サンプル * チャンネル = １グラニュール
		for gr=0, 2-1 do
			for ch=0, 2-1 do
				-- 0、1、3:ロングブロック
				-- 2:ショートブロック or mixedブロック
				if block_type[gr][ch] == 0 then print("block_type:reserved")
				elseif block_type[gr][ch] == 1 then print("block_type:start block")
				elseif block_type[gr][ch] == 2 then print("block_type:3 short windows")
				elseif block_type[gr][ch] == 3 then print("block_type:end block")
				else abort("invalid block_type")
				end
				
				if switch_point[gr][ch] == 0 then print("switch_point:not_mixed")
				elseif switch_point[gr][ch] == 1 then print("switch_point:mixed")
				else abort("invalid switch_point")
				end

				-- スケールファクタ（逆量子化テーブル）
				-- 576サンプルのうち、スケールファクタバンドごとに設定されている
				
				-- if ショートブロック/ミックスブロック
				-- else ロングブロック
				if (blocksplit_flag[gr][ch] == 1) and (block_type[gr][ch] == 2) then
					abort("unsupported short block")
					for cb=0, switch_point_l[gr][ch]-1 do
						if (scfsi[ch][band]==0) or (gr==0) then
							rbit("scalefac[cb][gr][ch]", slen_table.slen1[scalefac_compress[gr][ch]+1]) -- bits uimsbf
						end
					end
					for cb=switch_point_s[gr][ch], 12-1 do
						for window=0, 3-1 do
							if (scfsi[ch][band]==0) or (gr==0) then
								rbit("scalefac[cb][window][gr][ch]", slen_table.slen2[scalefac_compress[gr][ch]+1]) -- bits uimsbf
							end
						end
					end
				else
					if gr==0 then
						for cb=0, 21-1 do
							if cb < 11 then
								rbit("scalefac[cb][gr][ch]", slen_table.slen1[scalefac_compress[gr][ch]+1]) -- bits uimsbf
							else
								rbit("scalefac[cb][gr][ch]", slen_table.slen2[scalefac_compress[gr][ch]+1]) -- bits uimsbf
							end
						end
					else
						local band, slen
						for cb=0, 21-1 do
							if cb < 6 then      band = 0; slen = slen_table.slen1[scalefac_compress[gr][ch]+1]
							elseif cb < 11 then band = 1; slen = slen_table.slen1[scalefac_compress[gr][ch]+1]
							elseif cb < 16 then band = 2; slen = slen_table.slen2[scalefac_compress[gr][ch]+1]
							elseif cb < 21 then band = 3; slen = slen_table.slen2[scalefac_compress[gr][ch]+1]
							end

							if scfsi[ch][band] == 1 then
								scalefac[gr][ch][cb] = rbit("scalefac[cb][gr][ch]", slen)
							else
								scalefac[gr][ch][cb] = scalefac[0][ch][cb]
							end
						end
					end
				end
				
				-- ハフマン符号
				huffmancodebits(gr, ch, main_data_begin)
			
			end
	
			-- rbit("huff", part2_3_length[gr][ch] - (curbit() - main_data_beg))
			-- rbit("Huffmancodebits", part2_3_length[gr][ch]) -- bits bslbf 

		end

		-- while curbit() - main_data_begin ~= get("main_data_end") do
		-- 	rbit("ancillary_bit", 1) -- bitbslbf
		-- end
	end
end




function huffmancodebits(gr, ch, main_data_begin)
	local r0_end
	local r1_end
	local count
	local sfc_index

	-- if ショート/ミックス
	-- elif ロング
	if block_type[gr][ch] == 0 then
		r0_end = scale_factor_band_index[get("sampling_frequency")][1][region_address1[gr][ch] + 1]
		r1_end = scale_factor_band_index[get("sampling_frequency")][1][region_address1[gr][ch] + region_address2[gr][ch] + 2]
	else
		r0_end = 36;
		r1_end = 576;
	end

	-- print("r0_end="..r0_end, "r1_end="..r1_end)
	
	local n = big_values[gr][ch]
    for i=0, n-1 do
		local t
		if i < r0_end then
			-- print("table_select[gr][ch][0]", table_select[gr][ch][0])
			t = huff_table[table_select[gr][ch][0]]
		elseif i < r1_end then
			-- print("table_select[gr][ch][1]", table_select[gr][ch][1])
			t = huff_table[table_select[gr][ch][1]]
		else
			-- print("table_select[gr][ch][2]", table_select[gr][ch][2])
			t = huff_table[table_select[gr][ch][2]]
		end
		
		-- huff_tableが別テーブル参照の場合
		if t.ref ~= nil then
			-- print("t.ref", t.ref)
			t=huff_table[t.ref]
		end

		local x, y = read_bigvalue(t)
		
		-- linビット と signビット
		if x == 15 then
			-- print("x15")
			x = 15 + gbit(t.lin)
		end
		if x ~= 0 then
			-- print("xsign")
			if gbit(1) == 1 then
				x = -x
			end
		end
		if y == 15 then
			-- print("y15")
			y = 15 + gbit(t.lin)
		end
		if y ~= 0 then
			-- print("ysign")
			if gbit(1) == 1 then
				y = -y
			end
		end	
		
		print("["..i.."]", x, y)
	end

	-- count1
	local count1_table
	if count1table_select[gr][ch] == 0 then
		count1_table = huff_table.a
	else
		count1_table = huff_table.b
	end
	local c = 0
	while curbit() - main_data_begin < part2_3_length[gr][ch] do
		local v,w,x,y = read_count(count1_table)
		if v ~= 0 then
			if gbit(1) == 1 then
				v = -v
			end
		end	
		if w ~= 0 then
			if gbit(1) == 1 then
				w = -w
			end
		end	
		if x ~= 0 then
			if gbit(1) == 1 then
				x = -x
			end
		end	
		if y ~= 0 then
			if gbit(1) == 1 then
				y = -y
			end
		end	
		print("["..c.."]",v,w,x,y)
		c = c+1
	end
end

function read_bigvalue(t)
	-- めんどいので文字列比較する
	local h = "_"
	for i=1, 20 do
		
		-- print(h)
		
		if t[h] ~= nil then
			-- print(h, t[h][1], t[h][2])
			return t[h][1], t[h][2]
		end
		
		if gbit(1) == 1 then
			h = h.."1"
		else
			h = h.."0"
		end
	end
	if h.len() >= 21 then
		abort("read_huffman")
	end
end

function read_count(t)
	-- めんどいので文字列比較する
	local h = "_"
	for i=1, 20 do
		if t[h] ~= nil then
			return t[h][1], t[h][2], t[h][3], t[h][4]
		end
		
		if gbit(1) == 1 then
			h = h.."1"
		else
			h = h.."0"
		end
	end
	if h.len() > 7 then
		abort("read_huffman")
	end
end

function ancillary_data()
	while lbit(12) ~= syncword do
		rbit("ancillary_bit", 1) -- bitbslbf
	end
end

function mp3(size)
	nest_call("check_ID3v2", check_ID3v2)
	nest_call("check_ID3v1", check_ID3v1)

	enable_print(true)
	sequence(size)
end


-- enable_print(true)
mp3(get_size())

